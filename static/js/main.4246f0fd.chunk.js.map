{"version":3,"sources":["components/auth/Login.js","services/userService.js","components/auth/Profile.js","components/auth/Signup.js","components/auth/Home.js","Routes.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["url","Login","state","auth","login","e","console","log","preventDefault","_this","axios","post","then","res","toastr","success","localStorage","setItem","JSON","stringify","data","user","token","props","history","push","catch","error","onChange","field","target","name","value","setState","this","react_default","a","createElement","className","onSubmit","type","email","placeholder","password","Component","uploadPic","file","form","FormData","append","getItem","headers","Authorization","text","uploadText","picture","Profile","getPrivateInfo","get","message","uploadPhoto","refs","input","click","onChangeFile","files","pic","onChangeFiles","uploadTexts","inputText","parse","username","accept","ref","hidden","style","cursor","width","src","onClick","Signup","signup","password2","createUser","Home","redirect","setRedirect","setRedirects","redirects","renderRedirect","Redirect","to","renderRedirects","es_button","Routes","Switch","Route","path","component","NavbarFeatures","Layout","Header","Content","Footer","layout","menu","theme","mode","defaultSelectedKeys","lineHeight","Item","key","onMenuItemClick","React","App","Nav","src_Routes","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4246f0fd.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport axios from 'axios'\nimport toastr from 'toastr'\n\n\n\nconst url = 'http://localhost:3000/login'\n\nclass Login extends Component{\n    state={\n        auth:{}\n    }\n\n\nlogin = (e) =>{\n    console.log('ĺoguini')\n    e.preventDefault()\n    const {auth} = this.state\n    axios.post(url, auth)\n    .then(res=>{\n        console.log(res)\n        toastr.success('Logueadoo')\n        localStorage.setItem('user',JSON.stringify(res.data.user))\n        localStorage.setItem('token', res.data.token)\n        const hist = this.props.history\n        hist.push('/profile')\n    })\n    .catch(e=>{\n        console.log(e)\n        toastr.error('malisiososbiscos!')\n    })\n}\n\nonChange = (e) =>{\n    const field = e.target.name\n    const value = e.target.value\n    const {auth} = this.state\n    auth[field] = value\n    this.setState({auth})\n}\n\nrender() {\n    const{auth} = this.state\n    return(\n        <div className=\"fondito\" >\n            <div className=\"signup\" >\n                <form onSubmit={this.login}>\n                <p>\n                    <input \n                        name=\"email\" \n                        type=\"email\"\n                        onChange={this.onChange}\n                        value={auth.email}\n                        placeholder=\"tu correo\"\n                    />\n                </p>\n\n                <p>\n                    <input \n                        name=\"password\" \n                        type=\"password\"\n                        onChange={this.onChange}\n                        value={auth.password}\n                        placeholder=\"tu contraseña\"\n                    />\n                </p>\n                <button type=\"submit\"  >Inicia sesión</button>\n                \n                </form>\n            </div>\n        </div>\n    )\n}\n}\n\n\nexport default Login","import axios from 'axios'\n\nconst url = \"http://localhost:3000/\"\n\nexport const getUserData = (id) =>{\n    return axios.get(url + 'users/' + id)\n    .then (res=>{\n        return res.data\n    })\n    .catch(e=>e)\n}\n\nexport const uploadPic = (file) =>{\n    const form = new FormData()\n    form.append('file', file)\n    const token = localStorage.getItem('token')\n    return axios.post(url+ 'pictures/', form, {\n        headers:{\n            'Authorization':token\n        }\n    })\n    .then(text=>text)\n    .catch(e=>e)\n}\n\nexport const uploadText = (file) =>{\n    const form = new FormData()\n    form.append('file', file)\n    const token = localStorage.getItem('token')\n    return axios.post(url+ 'text/', form, {\n        headers:{\n            'Authorization':token\n        }\n    })\n    .then(picture=>picture)\n    .catch(e=>e)\n}","import React,{Component} from 'react'\n\nimport axios from 'axios'\nimport toastr from 'toastr'\nimport {uploadPic} from '../../services/userService'\nimport {uploadText} from '../../services/userService'\n\n\nclass Profile extends Component{\n    state={\n        user:{}\n    }\n\n\ncomponentWillMount(){\n    const user = JSON.parse(localStorage.getItem('user'))\n    if(!user) return this.props.history.push('/login')\n    this.setState({user})\n}\n\ngetPrivateInfo = () =>{\n    axios.get('http://localhost:3000/private',{\n        headers:{\n            \"Authorization\" : localStorage.getItem('token')\n        }\n    })\n    .then(res=>{\n        console.log(res)\n    })\n    .catch(e=>toastr.error('Algo salió mal', e.message))\n}\n\n\nuploadPhoto = () =>{\n this.refs.input.click()\n}\n\nonChangeFile = (e) =>{\n\n    console.log(e.target.files[0]) \n    uploadPic(e.target.files[0])\n    .then(pic=>console.log(pic))\n    .catch(e=>toastr.error(`Error`))\n\n}\n\n\nonChangeFiles = (e) =>{\n\n    console.log(e.target.files[0]) \n    uploadText(e.target.files[0])\n    .then(text=>console.log(text))\n    .catch(e=>toastr.error(`Error`))\n\n}\n\nuploadTexts = () =>{\n    this.refs.inputText.click()\n}\n\n\nrender(){\n    const {user} = this.state\n    return(\n\n        <div className=\"fondo\" >\n\n\n            <h1>Bienvenido {user.username}</h1>\n            <input accept=\"image/*\"  onChange={this.onChangeFile} ref=\"input\" hidden type=\"file\" />\n            <img style={{cursor:\"pointer\"}} width=\"50px\" src=\"http://simpleicon.com/wp-content/uploads/cloud-upload-2.png\" onClick={this.uploadPhoto} />\n            <input accept=\".doc,.txt,.pdf\" onChange={this.onChangeFiles} ref=\"inputText\" hidden type=\"file\" />\n            <img style={{cursor:\"pointer\"}} width=\"50px\" src=\"https://cdn0.iconfinder.com/data/icons/outline-ui-part-4-of-4/100/pack07-07-512.png\"  onClick={this.uploadTexts} />\n            \n\n        </div>\n\n    )\n}\n\n}\n\nexport default Profile","import React, {Component} from 'react'\nimport toastr from 'toastr'\nimport axios from 'axios'\n\n\nclass Signup extends Component{\n    state = {\n        signup: {\n            username: '',\n            email: '',\n            password: '',\n            password2: ''\n        }\n    }\n\n    onChange = (e) =>{\n        console.log(e.target.name, e.target.value)\n        const {signup} = this.state\n        let field = e.target.name\n        signup[field] = e.target.value        \n        this.setState({signup})\n    }\n\n    createUser = (e)=>{\n        e.preventDefault()\n        const {signup} = this.state\n        if (signup.password !== signup.password2){\n            return toastr.error('No coinciden las contraseñas')\n        }\n        axios.post('http://localhost:3000/signup', signup)\n        .then(user=>{\n            console.log(user)\n            toastr.success('Usuario Creado')\n            const hist = this.props.history\n            hist.push('/Login')\n        })\n        .catch(e=>toastr.error('Noup!'))\n    }\n\n    render(){\n        const {signup} = this.state\n        return(\n\n            <div className=\"fondito\" >\n\n                                <div className=\"signup\" >\n\n                                        <form onSubmit={this.createUser}>\n                                            <p>\n                                                <input \n                                                name=\"username\" \n                                                type=\"text\" \n                                                onChange={this.onChange} \n                                                value={signup.username} \n                                                placeholder=\"username\"/>\n                                            </p>\n                                            <p>\n                                                <input \n                                                name=\"email\" \n                                                type=\"email\" \n                                                onChange={this.onChange} \n                                                value={signup.email} \n                                                placeholder=\"correo\"/>\n                                            </p>\n                                            <p>\n                                                <input \n                                                name=\"password\" \n                                                type=\"password\" \n                                                onChange={this.onChange} \n                                                value={signup.password} \n                                                placeholder=\"contraseña\"/>\n                                            </p>\n                                            <p>\n                                                <input \n                                                name=\"password2\" \n                                                type=\"password\" \n                                                onChange={this.onChange} \n                                                value={signup.password2} \n                                                placeholder=\"repite tu contraseña\"/>\n                                            </p>\n                                        <p>\n                                            <button    type=\"submit\">  Inicia sesión</button>\n                                        </p>\n                                        </form>  \n\n\n                                </div>      \n\n            </div>\n\n\n\n        )\n    }\n}\n\nexport default Signup","import React,{Component} from 'react'\nimport { Button } from 'antd';\nimport { Redirect } from 'react-router-dom'\n\n\n\nclass Home extends Component{\n\n  state = {\n    redirect: false\n  }\n\n  setRedirect = () => {\n    this.setState({\n      redirect: true\n    })\n  }\n  setRedirects = () => {\n    this.setState({\n      redirects: true\n    })\n  }\n  renderRedirect = () => {\n    if (this.state.redirect) {\n      return <Redirect to='/Signup'/>\n    }\n  }\n  renderRedirects = () => {\n    if (this.state.redirects) {\n      return <Redirect to='/Login'/>\n    }\n  }\n\n  render(){\n    return(\n      <div>\n        <div className=\"papa\" >\n\n          <div className=\"img-trans\" >\n\n           \n              <h1>Endless memory</h1>\n              <br/>\n              <p>Tus recuerdos encapsulados para el futuro</p>\n              {this.renderRedirect()}\n              <Button type=\"primary\"  className=\"boton1\" onClick={this.setRedirect}  >Signup</Button>\n{/*             \n            <br/>\n            {this.renderRedirects()}\n            <Button type=\"primary\"  className=\"boton2\" onClick={this.setRedirects}  >Login</Button>\n */}\n\n\n          </div>\n          {/* <div className=\"img-trans2\" >\n\n           \n              <h2>The sentiments of the present in the future</h2>\n\n\n\n          </div> \n         */}\n        </div>\n      </div>\n    )\n  }\n\n}\n\n\nexport default Home","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport Login from './components/auth/Login'\nimport Profile from './components/auth/Profile'\nimport Signup from './components/auth/Signup';\nimport Home from './components/auth/Home';\n\n\nconst Routes =()=>{\n    return(\n        <Switch>\n            <Route path=\"/signup\" component={Signup}/>\n            <Route path=\"/login\" component={Login}/>\n            <Route path=\"/profile\" component={Profile}/>\n            <Route path=\"/\" component={Home}/>\n        </Switch>\n    )\n}\n\nexport default Routes","\nimport { Redirect } from 'react-router-dom'\nimport React, { Component } from 'react';\nimport { Layout, Menu, Breadcrumb } from 'antd';\nconst { Header, Content, Footer } = Layout;\n\n\n\nclass NavbarFeatures extends React.Component {\n\n    state = {\n        redirect: false\n      }\n    \n      setRedirect = () => {\n        this.setState({\n          redirect: true\n        })\n      }\n      renderRedirect = () => {\n        if (this.state.redirect) {\n          return <Redirect to='/'/>\n        }\n      }\n   \n    render() {\n        return (\n            <div>\n                <Layout>\n                    {/* <Header style={{ position: 'fixed', zIndex: 1, width: '100%' }}> */}\n                    {/* <div className=\"logo\" /> */}\n                    <Menu\n                        theme=\"dark\"\n                        mode=\"horizontal\"\n                        defaultSelectedKeys={['2']}\n                        style={{ lineHeight: '64px' }}\n                    >\n                        {this.renderRedirect()}\n                        <Menu.Item key=\"13\" onMenuItemClick={this.setRedirect}   >  Home</Menu.Item>\n                        <Menu.Item key=\"2\"  > Signup</Menu.Item>\n                        <Menu.Item key=\"1\"   >Login</Menu.Item>\n                    </Menu>\n                    {/* </Header> */}\n                 \n                </Layout>\n          </div>\n        );\n    }\n}\n\n\n\n\nexport default NavbarFeatures\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport Routes from './Routes'\nimport Nav from './components/Nav'\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav/>\n        <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\nimport 'toastr/build/toastr.css'\n\nconst WithRouter = ()=> <BrowserRouter><App/></BrowserRouter>\nReactDOM.render(<WithRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}